defaults:
  - _self_
  - task: lift_image_abs

name: train_ae
_target_: diffusion_policy.workspace.train_ae_workspace.TrainAEWorkspace

task_name: ${task.name}
shape_meta: ${task.shape_meta}
exp_name: "default"

horizon: 16
# n_action_steps: 8
# n_latency_steps: 0
# dataset_obs_steps: ${n_obs_steps}
# past_action_visible: False
# keypoint_visible_rate: 1.0
# obs_as_global_cond: True
use_image_input: False
use_language_input: False

policy:
  _target_: diffusion_policy.policy.ae_policy.AEPolicy
  sample_posterior: False
  # action_dim: 7
  hidden_size: 128
  latent_size: 32
  n_encoder_layers: 3
  n_decoder_layers: 3
  n_heads: 8
  horizon: ${horizon}
  dropout: 0.1
  # language_feature_dim: 
  # low_dim_feature_dim:
  # with_obs: True
  # with_language: True
  # ckpt_path: 
  shape_meta: ${shape_meta}
  # n_action_steps: ${eval:'${n_action_steps}+${n_latency_steps}'}
  # n_obs_steps: ${n_obs_steps}
  # num_inference_steps: 100
  # obs_as_global_cond: ${obs_as_global_cond}
  # crop_shape: [76, 76]
  # crop_shape: null
  # diffusion_step_embed_dim: 128
  # down_dims: [512, 1024, 2048]
  # kernel_size: 5
  # n_groups: 8
  # cond_predict_scale: True
  # obs_encoder_group_norm: True
  # eval_fixed_crop: True

  # scheduler.step params
  # predict_epsilon: True

# ema:
#   _target_: diffusion_policy.model.diffusion.ema_model.EMAModel
#   update_after_step: 0
#   inv_gamma: 1.0
#   power: 0.75
#   min_value: 0.0
#   max_value: 0.9999

dataloader:
  batch_size: 64
  num_workers: 8
  shuffle: True
  pin_memory: True
  persistent_workers: False

val_dataloader:
  batch_size: 64
  num_workers: 8
  shuffle: False
  pin_memory: True
  persistent_workers: False

optimizer:
  _target_: torch.optim.AdamW
  lr: 1.0e-4
  betas: [0.95, 0.999]
  eps: 1.0e-8
  weight_decay: 1.0e-6

training:
  device: "cuda:0"
  seed: 42
  debug: False
  resume: False
  # optimization
  lr_scheduler: cosine
  lr_warmup_steps: 500
  num_epochs: 3050
  gradient_accumulate_every: 1
  # EMA destroys performance when used with BatchNorm
  # replace BatchNorm with GroupNorm.
  use_ema: True
  # training loop control
  # in epochs
  rollout_every: 50
  checkpoint_every: 50
  val_every: 1
  sample_every: 5
  # steps per epoch
  max_train_steps: null
  max_val_steps: null
  # misc
  tqdm_interval_sec: 1.0

logging:
  project: diffusion_policy_debug
  resume: True
  mode: online
  name: ${now:%Y.%m.%d-%H.%M.%S}_${name}_${task_name}
  tags: ["${name}", "${task_name}", "${exp_name}"]
  id: null
  group: null

checkpoint:
  topk:
    monitor_key: test_mean_score
    mode: max
    k: 5
    format_str: 'epoch={epoch:04d}-test_mean_score={test_mean_score:.3f}.ckpt'
  save_last_ckpt: True
  save_last_snapshot: False

multi_run:
  run_dir: data/outputs/${now:%Y.%m.%d}/${now:%H.%M.%S}_${name}_${task_name}
  wandb_name_base: ${now:%Y.%m.%d-%H.%M.%S}_${name}_${task_name}

hydra:
  job:
    override_dirname: ${name}
  run:
    dir: data/outputs/${now:%Y.%m.%d}/${now:%H.%M.%S}_${name}_${task_name}
  sweep:
    dir: data/outputs/${now:%Y.%m.%d}/${now:%H.%M.%S}_${name}_${task_name}
    subdir: ${hydra.job.num}
