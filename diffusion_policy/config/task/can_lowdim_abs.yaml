name: can_lowdim
shape_meta: &shape_meta
  # acceptable types: rgb, low_dim
  obs:
    agentview_image:
      shape: [3, 84, 84]
      type: rgb
    # robot0_eye_in_hand_image:
    #   shape: [3, 84, 84]
    #   type: rgb
    robot0_eef_pos:
      shape: [3]
      # type default: low_dim
    robot0_eef_quat:
      shape: [4]
    robot0_gripper_qpos:
      shape: [2]
  action: 
    shape: [10]
obs_dim: 19
action_dim: 10
keypoint_dim: 3

obs_keys: &obs_keys ['object', 'robot0_eef_pos', 'robot0_eef_quat', 'robot0_gripper_qpos']
task_name: &task_name can
dataset_type: &dataset_type ph
dataset_path: &dataset_path data/robomimic/datasets/${task.task_name}/${task.dataset_type}/low_dim_abs.hdf5
abs_action: &abs_action True

env_runner:
  _target_: diffusion_policy.env_runner.robomimic_image_runner_ae.RobomimicImageRunnerAE
  dataset_path: *dataset_path
  obs_keys: *obs_keys
  n_train: 6
  n_train_vis: 2
  train_start_idx: 0
  n_test: 50
  n_test_vis: 4
  test_start_seed: 100000
  # use python's eval function as resolver, single-quoted string as argument
  max_steps: ${eval:'500 if "${task.dataset_type}" == "mh" else 400'}
  n_obs_steps: ${n_obs_steps}
  n_action_steps: ${n_action_steps}
  n_latency_steps: ${n_latency_steps}
  render_hw: [128,128]
  fps: 10
  crf: 22
  past_action: ${past_action_visible}
  abs_action: *abs_action
  n_envs: 28
  output_dir:

dataset:
  _target_: diffusion_policy.dataset.robomimic_replay_lowdim_dataset.RobomimicReplayLowdimDataset
  dataset_path: *dataset_path
  horizon: ${horizon}
  pad_before: ${eval:'${n_obs_steps}-1+${n_latency_steps}'}
  pad_after: ${eval:'${n_action_steps}-1'}
  obs_keys: *obs_keys
  abs_action: *abs_action
  use_legacy_normalizer: False
  rotation_rep: rotation_6d
  seed: 42
  val_ratio: 0.02
