defaults:
  - _self_
  - task: lift_lowdim_abs # lift_image_abs

name: train_ae
_target_: diffusion_policy.workspace.train_ae_workspace.TrainAEWorkspace

task_name: ${task.name}
shape_meta: ${task.shape_meta}
exp_name: "default"

test_ae_only: True

horizon: 16
n_obs_steps: 1
n_latency_steps: 0
dataset_obs_steps: 1
past_action_visible: False
n_action_steps: 8
use_image_input: False
use_language_input: False

seed: 3407

training:
  use_ema: False

policy:
  _target_: diffusion_policy.policy.ae_policy.AEPolicy
  sample_posterior: False
  # action_dim: 7
  hidden_size: 128
  latent_size: 32
  n_encoder_layers: 3
  n_decoder_layers: 3
  n_heads: 8
  horizon: ${horizon}
  dropout: 0.1
  lr: 3e-4
  weight_decay: 0.0
  warmup_steps: 1000
  # language_feature_dim: 
  # low_dim_feature_dim:
  # with_obs: True
  # with_language: True
  # ckpt_path: 
  kl_weight: 0.001
  shape_meta: ${shape_meta}


# ema:
#   _target_: diffusion_policy.model.diffusion.ema_model.EMAModel
#   update_after_step: 0
#   inv_gamma: 1.0
#   power: 0.75
#   min_value: 0.0
#   max_value: 0.9999
datamodule:
  _target_: diffusion_policy.dataset.robomimic_replay_lowdim_dataset.RobomimicLowdimDatamodule
  # _target_: diffusion_policy.dataset.robomimic_replay_image_dataset.RobomimicImageDatamodule
  batch_size: 8192
  num_workers: 8
  dataset: ${task.dataset}

trainer:
  _target_: lightning.pytorch.trainer.Trainer
  # devices: [0, 1, 2, 3]
  max_epochs: 200
  # pretrain_max_epochs: 10
  check_val_every_n_epoch: 100
  log_every_n_steps: 10
  logger:
    _target_: lightning.pytorch.loggers.wandb.WandbLogger 
    project: latent_diffusion_policy_ae
    # name: 
    save_dir: ${oc.env:DATA_ROOT}/latent_dp_logs/
  num_sanity_val_steps: 2
  # strategy: ddp
  default_root_dir: ${oc.env:DATA_ROOT}/latent_dp_logs/
  # overfit_batches: 500
  # fast_dev_run: True
  # profiler: simple
  # profiler: 
  #   _target_: lightning.pytorch.profilers.AdvancedProfiler
  #   dirpath: .
  #   filename: perf_logs
  gradient_clip_val: 0.5
  callbacks:
    - _target_: lightning.pytorch.callbacks.ModelCheckpoint
      save_top_k: 1
      save_last: True
      save_weights_only: False
      monitor: val_total_loss
      mode: min
    - _target_: lightning.pytorch.callbacks.TQDMProgressBar
      # refresh_rate: 100

# logging:
#   project: diffusion_policy_debug
#   resume: True
#   mode: online
#   name: ${now:%Y.%m.%d-%H.%M.%S}_${name}_${task_name}
#   tags: ["${name}", "${task_name}", "${exp_name}"]
#   id: null
#   group: null

# checkpoint:
#   topk:
#     monitor_key: test_mean_score
#     mode: max
#     k: 5
#     format_str: 'epoch={epoch:04d}-test_mean_score={test_mean_score:.3f}.ckpt'
#   save_last_ckpt: True
#   save_last_snapshot: False

multi_run:
  run_dir: data/outputs/${now:%Y.%m.%d}/${now:%H.%M.%S}_${name}_${task_name}
  wandb_name_base: ${now:%Y.%m.%d-%H.%M.%S}_${name}_${task_name}

hydra:
  job:
    override_dirname: ${name}
  run:
    dir: data/outputs/${now:%Y.%m.%d}/${now:%H.%M.%S}_${name}_${task_name}
  sweep:
    dir: data/outputs/${now:%Y.%m.%d}/${now:%H.%M.%S}_${name}_${task_name}
    subdir: ${hydra.job.num}
